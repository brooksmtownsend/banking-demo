---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 45
  template:
    spec:
      initContainers:
        - name: wait-for-it
          image: chainguard/wait-for-it:latest
          args:
            - $(PGHOST):$(PGPORT)
            - --timeout=30
            - --strict
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: postgres-access
                  key: postgres-host
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: postgres-access
                  key: postgres-port
      containers:
      - name: setup-postgres
        image: chainguard/postgres:latest
        command: ["/usr/bin/psql"]
        args:
          - --file=/tmp/tasks/tasks.sql
        volumeMounts:
        - name: tasks-sql-volume
          mountPath: /tmp/tasks
        env:
          - name: PGHOST
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-host
          - name: PGPORT
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-port
          - name: PGDATABASE
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-database
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-user
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-password
          - name: PGSSLMODE
            valueFrom:
              secretKeyRef:
                name: postgres-access
                key: postgres-ssl-mode
      volumes:
        - name: tasks-sql-volume
          configMap:
            name: tasks-sql
      restartPolicy: OnFailure