// Code generated by wit-bindgen-go. DO NOT EDIT.

package tracker

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// This file contains wasmimport and wasmexport declarations for "demo:task-manager@0.0.1".

//go:wasmexport demo:task-manager/tracker@0.0.1#start
//export demo:task-manager/tracker@0.0.1#start
func wasmexport_Start(clientLocation0 *uint8, clientLocation1 uint32, originalAsset0 *uint8, originalAsset1 uint32) (result *cm.Result[string, string, OperationError]) {
	clientLocation := cm.LiftString[string]((*uint8)(clientLocation0), (uint32)(clientLocation1))
	originalAsset := cm.LiftString[string]((*uint8)(originalAsset0), (uint32)(originalAsset1))
	result_ := Exports.Start(clientLocation, originalAsset)
	result = &result_
	return
}

//go:wasmexport demo:task-manager/tracker@0.0.1#get
//export demo:task-manager/tracker@0.0.1#get
func wasmexport_Get(id0 *uint8, id1 uint32) (result *cm.Result[OperationShape, Operation, OperationError]) {
	id := cm.LiftString[string]((*uint8)(id0), (uint32)(id1))
	result_ := Exports.Get(id)
	result = &result_
	return
}

//go:wasmexport demo:task-manager/tracker@0.0.1#complete-resize
//export demo:task-manager/tracker@0.0.1#complete-resize
func wasmexport_CompleteResize(id0 *uint8, id1 uint32, resizedAsset0 uint32, resizedAsset1 *uint8, resizedAsset2 uint32, resizeError0 uint32, resizeError1 *uint8, resizeError2 uint32) (result *cm.Result[OperationError, struct{}, OperationError]) {
	id := cm.LiftString[string]((*uint8)(id0), (uint32)(id1))
	resizedAsset := lift_OptionString((uint32)(resizedAsset0), (*uint8)(resizedAsset1), (uint32)(resizedAsset2))
	resizeError := lift_OptionString((uint32)(resizeError0), (*uint8)(resizeError1), (uint32)(resizeError2))
	result_ := Exports.CompleteResize(id, resizedAsset, resizeError)
	result = &result_
	return
}

//go:wasmexport demo:task-manager/tracker@0.0.1#complete-analyze
//export demo:task-manager/tracker@0.0.1#complete-analyze
func wasmexport_CompleteAnalyze(id0 *uint8, id1 uint32, detected0 uint32, detected1 uint32, analyzeError0 uint32, analyzeError1 *uint8, analyzeError2 uint32) (result *cm.Result[OperationError, struct{}, OperationError]) {
	id := cm.LiftString[string]((*uint8)(id0), (uint32)(id1))
	detected := lift_OptionBool((uint32)(detected0), (uint32)(detected1))
	analyzeError := lift_OptionString((uint32)(analyzeError0), (*uint8)(analyzeError1), (uint32)(analyzeError2))
	result_ := Exports.CompleteAnalyze(id, detected, analyzeError)
	result = &result_
	return
}

//go:wasmexport demo:task-manager/tracker@0.0.1#list
//export demo:task-manager/tracker@0.0.1#list
func wasmexport_List() (result *cm.Result[cm.List[Operation], cm.List[Operation], OperationError]) {
	result_ := Exports.List()
	result = &result_
	return
}

//go:wasmexport demo:task-manager/tracker@0.0.1#delete
//export demo:task-manager/tracker@0.0.1#delete
func wasmexport_Delete(id0 *uint8, id1 uint32) (result *cm.Result[OperationError, struct{}, OperationError]) {
	id := cm.LiftString[string]((*uint8)(id0), (uint32)(id1))
	result_ := Exports.Delete(id)
	result = &result_
	return
}
